generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider          = "postgresql"
    url               = env("DATABASE_URL")
    shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

enum Role {
    OWNER // Admin but superuser
    ADMIN // All access except delete, change admins
    MEMBER // Can create, read, update, delete
    VIEWER // Can read
}

enum AcceptedTokenTypes {
    ONLY
    SOME
    ANY
}

enum TransactionStatus {
    SUCCESS
    PENDING
    FAILURE
}

model Profile {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    pubkey    String   @unique @db.VarChar(44)
    name      String?
    email     String?
    avatarUrl String?
    Member    Member[]
}

model Member {
    id             String       @id @default(cuid())
    createdAt      DateTime     @default(now())
    updatedAt      DateTime     @updatedAt
    profile        Profile      @relation(fields: [profileId], references: [id])
    profileId      String
    Organization   Organization @relation(fields: [organizationId], references: [id])
    organizationId String
    role           Role
}

model Organization {
    id             String             @id @default(cuid())
    createdAt      DateTime           @default(now())
    updatedAt      DateTime           @updatedAt
    name           String
    fundsPubkey    String             @db.VarChar(44)
    website        String?
    twitter        String?
    logoUrl        String?
    members        Member[]
    transactions   Transaction[]
    acceptedTokens AcceptedTokenTypes @default(ONLY)
    tokenPubkeys   String[]           @default(["EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"])
}

model Transaction {
    id             String            @id @default(cuid())
    createdAt      DateTime          @default(now())
    amount         Decimal
    tokenPubkey    String
    reference      String
    signature      String?
    customerPubkey String?
    messsage       String?
    organization   Organization      @relation(fields: [organizationId], references: [id])
    organizationId String
    status         TransactionStatus @default(SUCCESS)
}
